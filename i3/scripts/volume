#!/bin/bash

# Toggle mute status on left click
if [ "$BLOCK_BUTTON" = "1" ]; then
  # Use pactl to toggle mute for the default sink
  pactl set-sink-mute @DEFAULT_SINK@ toggle
  # Send signal to i3blocks to update after click (signal 1 as in your i3 config)
fi

# Get volume and mute status using pactl
# Get raw volume output, e.g., "Volume: 0: 65536 / 100% / 0.00 dB"
VOLUME_RAW=$(pactl get-sink-volume @DEFAULT_SINK@)
# Extract percentage using grep and awk
VOLUME=$(echo "$VOLUME_RAW" | grep -Po '[0-9]{1,3}(?=%)' | head -1)

# Get mute status, e.g., "Mute: no" or "Mute: yes"
MUTED_RAW=$(pactl get-sink-mute @DEFAULT_SINK@)
# Extract 'yes' or 'no'
MUTED=$(echo "$MUTED_RAW" | grep -Po '(?<=Mute: )(yes|no)')


# Initialize variables for output
FULL_TEXT=""
SHORT_TEXT="" # Often left empty if full text is sufficient
COLOR=""

# Build progress bar and determine icon based on volume
if [ "$MUTED" = "yes" ]; then
  # If muted, set specific text and color for mute state
  FULL_TEXT=" 󰝟 [░░░MUTE░░░] $VOLUME% " # Add spaces for border padding
  COLOR="#888888" # Grey for muted state
else
  # Calculate number of filled blocks (out of 10)
  FILLED=$((VOLUME / 10))

  # Build progress bar based on volume percentage
  # Icons for volume levels (ensure your font supports these, e.g., Nerd Fonts)
  if [ "$FILLED" -ge 10 ]; then
    BAR="󱄡 [██████████]"
  elif [ "$FILLED" -eq 9 ]; then
    BAR="󱄡 [█████████░]"
  elif [ "$FILLED" -eq 8 ]; then
    BAR="󰕾 [████████░░]"
  elif [ "$FILLED" -eq 7 ]; then
    BAR="󰕾 [███████░░░]"
  elif [ "$FILLED" -eq 6 ]; then
    BAR="󰕾 [██████░░░░]"
  elif [ "$FILLED" -eq 5 ]; then
    BAR="󰖀 [█████░░░░░]"
  elif [ "$FILLED" -eq 4 ]; then
    BAR="󰖀 [████░░░░░░]"
  elif [ "$FILLED" -eq 3 ]; then
    BAR="󰖀 [███░░░░░░░]"
  elif [ "$FILLED" -eq 2 ]; then
    BAR="󰕿 [██░░░░░░░░]"
  elif [ "$FILLED" -eq 1 ]; then
    BAR="󰕿 [█░░░░░░░░░]"
  else
    BAR="󰕿 [░░░░░░░░░░]"
  fi

  # Set full text for non-muted state with leading/trailing spaces for border effect
  FULL_TEXT=" $BAR $VOLUME% "

  # Determine color based on volume for non-muted state
  # These color thresholds are from our previous discussions
  if [ "$VOLUME" -lt 30 ]; then
      COLOR="#E78284" # Reddish for very low volume
  elif [ "$VOLUME" -lt 70 ]; then
      COLOR="#8CAAEE" # Bluish for medium volume
  else
      COLOR="#A6D189" # Greenish for high volume
  fi
fi

# Output for i3blocks (3 lines: Full Text, Short Text, Color)
echo "$FULL_TEXT"
echo "$SHORT_TEXT" # This line is often left empty if not needed
echo "$COLOR"
